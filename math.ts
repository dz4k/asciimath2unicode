export const substitutions: Record<string, string> = {
  "Alpha": "Œë",
  "Beta": "Œí",
  "Gamma": "Œì",
  "Delta": "Œî",
  "Epsilon": "Œï",
  "Zeta": "Œñ",
  "Eta": "Œó",
  "Theta": "Œò",
  "Iota": "I",
  "Kappa": "Œö",
  "Lambda": "Œõ",
  "Mu": "Œú",
  "Nu": "Œù",
  "Xi": "Œû",
  "Omicron": "Œü",
  "Pi": "Œ†",
  "Rho": "Œ°",
  "Sigma": "Œ£",
  "Tau": "Œ§",
  "Upsilon": "Œ•",
  "Phi": "Œ¶",
  "Chi": "Œß",
  "Psi": "Œ®",
  "Omega": "Œ©",

  "alpha": "Œ±",
  "beta": "Œ≤",
  "gamma": "Œ≥",
  "delta": "Œ¥",
  "epsilon": "œµ",
  "zeta": "Œ∂",
  "eta": "Œ∑",
  "theta": "Œ∏",
  "iota": "Œπ",
  "kappa": "Œ∫",
  "lambda": "Œª",
  "mu": "Œº",
  "nu": "ŒΩ",
  "xi": "Œæ",
  "omicron": "Œø",
  "pi": "œÄ",
  "rho": "œÅ",
  "sigma": "œÉ",
  "tau": "œÑ",
  "upsilon": "œÖ",
  "phi": "œÜ",
  "chi": "œá",
  "psi": "œà",
  "omega": "œâ",

  "varepsilon": "Œµ",
  "varnothing": "‚àÖ",
  "varkappa": "œ∞",
  "varphi": "…∏",
  "varpi": "œñ",
  "varrho": "œ±",
  "varsigma": "œÇ",
  "vartheta": "œë",

  "_0": "‚ÇÄ",
  "_1": "‚ÇÅ",
  "_2": "‚ÇÇ",
  "_3": "‚ÇÉ",
  "_4": "‚ÇÑ",
  "_5": "‚ÇÖ",
  "_6": "‚ÇÜ",
  "_7": "‚Çá",
  "_8": "‚Çà",
  "_9": "‚Çâ",
  "^0": "‚Å∞",
  "^1": "¬π",
  "^2": "¬≤",
  "^3": "¬≥",
  "^4": "‚Å¥",
  "^5": "‚Åµ",
  "^6": "‚Å∂",
  "^7": "‚Å∑",
  "^8": "‚Å∏",
  "^9": "‚Åπ",

  "_+": "‚Çä",
  "_-": "‚Çã",
  "^+": "‚Å∫",
  "^-": "‚Åª",

  _a: "‚Çê",
  _e: "‚Çë",
  _h: "‚Çï",
  _i: "·µ¢",
  _j: "‚±º",
  _k: "‚Çñ",
  _l: "‚Çó",
  _m: "‚Çò",
  _n: "‚Çô",
  _o: "‚Çí",
  _p: "‚Çö",
  _r: "·µ£",
  _s: "‚Çõ",
  _t: "‚Çú",
  _u: "·µ§",
  _v: "·µ•",
  _x: "‚Çì",
  "^a": "·µÉ",
  "^b": "·µá",
  "^c": "·∂ú",
  "^d": "·µà",
  "^e": "·µâ",
  "^f": "·∂†",
  "^g": "·µç",
  "^h": " ∞",
  "^i": "^i",
  "^j": " ≤",
  "^k": "·µè",
  "^l": "À°",
  "^m": "·µê",
  "^n": "‚Åø",
  "^o": "·µí",
  "^p": "·µñ",
  "^r": " ≥",
  "^s": "À¢",
  "^t": "·µó",
  "^u": "·µò",
  "^v": "·µõ",
  "^w": " ∑",
  "^x": "À£",
  "^y": " ∏",
  "^z": "·∂ª",
  "*": "‚ãÖ",
  "**": "‚àó",
  "***": "‚ãÜ",
  "//": "/",
  "\\\\": "\\",
  "xx": "√ó",
  "-:": "√∑",
  "|><": "‚ãâ",
  "><|": "‚ãä",
  "|><|": "‚ãà",
  "@": "‚àò",
  "o+": "‚äï",
  "ox": "‚äó",
  "o.": "‚äô",
  "sum": "Œ£",
  "prod": "Œ†",
  "lim": "**lim**",
  "^^": "‚àß",
  "^^^": "‚ãÄ",
  "vv": "‚à®",
  "vvv": "‚ãÅ",
  "nn": "‚à©",
  "nnn": "‚ãÇ",
  "uu": "‚à™",
  "uuu": "‚ãÉ",

  "sqrt": "‚àö",
  "root": "‚àö",
  "int": "‚à´",
  "oint": "‚àÆ",
  "del": "‚àÇ",
  "grad": "‚àá",
  "+-": "¬±",
  "O/": "‚àÖ",
  "oo": "‚àû",
  "aleph": "‚Ñµ",

  ":.": "‚à¥",
  ":'": "‚àµ",
  "...": "‚ãØ",
  "/_": "‚à†",
  "/_\\": "‚ñ≥",
  "diamond": "‚ãÑ",
  "square": "‚ñ°",
  "|__": "‚åä",
  "__|": "‚åã",
  "|~": "‚åà",
  "~|": "‚åâ",
  "CC": "‚ÑÇ",
  "NN": "‚Ñï",
  "QQ": "‚Ñö",
  "RR": "‚Ñù",
  "ZZ": "‚Ñ§",

  "!=": "‚â†",
  "<=": "‚â§",
  ">=": "‚â•",
  "-<": "‚â∫",
  "-<=": "‚™Ø",
  ">-": "‚âª",
  ">-=": "‚™∞",
  "in": "‚àà",
  "!in": "‚àâ",
  "sub": "‚äÇ",
  "sup": "‚äÉ",
  "sube": "‚äÜ",
  "supe": "‚äá",
  "-=": "‚â°",
  "~=": "‚âÖ",
  "~~": "‚âà",
  "prop": "‚àù",

  "and": "**and**",
  "or": "**or**",
  "not": "¬¨",
  "=>": "‚áí",
  "if": "**if**",
  "<=>": "‚áî",
  "AA": "‚àÄ",
  "EE": "‚àÉ",
  "_|_": "‚ä•",
  "TT": "‚ä§",
  "|--": "‚ä¢",
  "|==": "‚ä®",

  "<<": "‚ü®",
  ">>": "‚ü©",

  "uarr": "‚Üë",
  "uparrow": "‚Üë",
  "darr": "‚Üì",
  "downarrow": "‚Üì",
  "rarr": "‚Üí",
  "rightarrow": "‚Üí",
  "->": "‚Üí",
  "to": "‚Üí",
  ">->": "‚Ü£",
  "->>": "‚Ü†",
  ">->>": "‚§ñ",
  "|->": "‚Ü¶",
  "mapsto": "‚Ü¶",
  "larr": "‚Üê",
  "leftarrow": "‚Üê",
  "harr": "‚Üî",
  "leftrightarrow": "‚Üî",
  "rArr": "‚áí",
  "Rightarrow": "‚áí",
  "lArr": "‚áê",
  "Leftarrow": "‚áê",
  "hArr": "‚áî",
  "Leftrightarrow": "‚áî",

  " hat": "\u0302",
  " bar": "\u0305",
  " dot":"\u0305",
  " ul": "\u0332",
  " vec": "\u20D7",
  " tilde": "\u0303",
  " ddot": "\u0308",
  " cancel": "\u0338",
};

export const normalAlphabet = "qwertyuiop asdfghjkl zxcvbnm QWERTYUIOP ASDFGHJKL ZXCVBNM";
export const alphabets: Record<string, string[]> = {
  "fr": [..."ùîÆùî¥ùî¢ùîØùî±ùî∂ùî≤ùî¶ùî¨ùî≠ ùîûùî∞ùî°ùî£ùî§ùî•ùîßùî®ùî© ùî∑ùîµùî†ùî≥ùîüùî´ùî™ ùîîùîöùîà‚Ñúùîóùîúùîò‚Ñëùîíùîì ùîÑùîñùîáùîâùîä‚Ñåùîçùîéùîè ‚Ñ®ùîõ‚Ñ≠ùîôùîÖùîëùîê"],
}

export default function processMath(math: string): string {
  let rv = math;
  rv = applySubstitutions(rv);
  rv = applyAlphabets(rv);
  return rv;
}

function applySubstitutions(rv: string) {
  for(const subst in substitutions) {
    rv = rv.replaceAll(subst, substitutions[subst]);
  }
  return rv;
}

function applyAlphabets(rv: string): string {
  const regexBase = String.raw`"((?:[^"]|\\")*)"`;
  console.log("Applying alphabets", regexBase);
  for (const alphabet in alphabets) {
    const regex = new RegExp(alphabet + regexBase);
    console.log("Constructed regex:", regex);
    rv = applyAlphabet(rv, regex, alphabets[alphabet]);
  }
  return rv;

  function applyAlphabet(rv: string, regex: RegExp, alphabet: string[]): string {
    return rv.replace(regex, (_, ...groups) => {
      const [text] = groups;
      const rendered = [];
      for (const ch of text) {
        rendered.push(alphabet[normalAlphabet.indexOf(ch)] ?? ch);
      }
      return rendered.join("");
      //
    })
  }
}
